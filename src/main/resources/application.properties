#database=postgresql
#spring.cloud.gcp.sql.database-name=ayojak-spike
#spring.cloud.gcp.sql.instance-connection-name=ayojak:asia-south1:ayojak-spike
#spring.profiles.active=postgresql
#spring.cloud.gcp.projectId=ayojak
#spring.cloud.gcp.sql.instanceName=ayojak-spike
#spring.cloud.gcp.sql.databaseName=users
#spring.cloud.gcp.sql.userName=postgres
#spring.cloud.gcp.sql.password=postgres

#spring.cloud.gcp.projectId= ayojak
#spring.cloud.gcp.sql.instanceName= ayojak-spike -p
#
#spring.cloud.gcp.sql.databaseName= users
#spring.cloud.gcp.sql.userName= postgres
#spring.cloud.gcp.sql.password= postgres
#
#spring.cloud.gcp.sql.jdbcDriver= org.postgresql.Driver
#spring.cloud.gcp.sql.jdbcUrl= jdbc:postgresql:///ayojak-spike?cloudSqlInstance=ayojak:asia-south1:ayojak-spike&socketFactory=com.google.cloud.sql.postgres.SocketFactory&user=postgres&password=postgres

# database init, supports mysql too
database=postgresql
spring.datasource.url=jdbc:postgresql:///users?cloudSqlInstance=ayojak:asia-south1:ayojak-spike?verifyServerCertificate=false&useSSL=false&requireSSL=false
spring.datasource.username=postgres
#spring.datasource.name=users
spring.datasource.password=postgres
spring.cloud.gcp.sql.instance-connection-name=ayojak:asia-south1:ayojak-spike
spring.cloud.gcp.sql.database-name =users

spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false
server.ssl.enabled = false
#spring.jpa.open-in-view=false


#config.addDataSourceProperty("socketFactoryArg",ayojak:asia-south1:ayojak)

# Uncomment this the first time the app runs
# spring.datasource.initialize=true

#jdbc:postgresql:///ayojak-spike?cloudSqlInstance=ayojak:asia-south1:ayojak-spike&socketFactory=com.google.cloud.sql.postgres.SocketFactory&user=postgres&password=postgres